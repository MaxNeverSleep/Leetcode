package com.starline.basic_knowledge.algorithm.leetcode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @author jianyu.yang
 * @date 2022/7/8
 **/
public class Question16 {

    public static void main(String... args) {
//        threeSum(new int[]{-1, 0, 1, 2, -1, -4});
//        int result = threeSumClosest(new int[]{-1, 2, 1, -4}, 2);
//        int result = threeSumClosest(new int[]{-12, -44, -67, -65, 17, 17, -80, 73, 51, 46, -48, -43, -31, 17, 68, 25, 79, 65, -41, 18, -68, -7, 29, -19, -48, 3, -67, 73, -57, -90, 12, 37, -16, -1, -65, 47, 53, -79, 0, -62, -96, -10, -79, -25, 38, 93, 28, 6, 99, 68, -25, -27, -1, -61, 70, -50, -54, -93, 43, -34, 31, 98, -56, -70, 44, 49, -52, 13, 15, 55, 63, 16, -30, -15, -25, 87, 75, 81, 19, 17, 88, -99, 9, -92, -52, 75, -16, 97, -99, -86, 60, -45, -88, 99, 75, 36, -82, -67, -12, -47, 37, -44, -45, 67, 85, -32, 57, -11, -35, -51, -25, -38, 54, -30, 96, -62, -31, 53, -79, -19, 37, -73, 95, -38, -60, 72, -8, -24, -46, -61, 63, -41, 95, 37, -79, -1, 74, -9, 92, 97, -34, -69, -43, 38, 79, 64, 21, 68, 64}, 189);
        int result = threeSumClosest(new int[]{812,-598,-575,-996,776,85,-304,-580,-602,-375,739,417,-257,836,-756,-380,-662,-320,-955,629,-410,-201,172,149,269,884,533,42,-133,-824,-6,31,998,736,-573,852,-820,-557,554,900,88,-540,39,-151,472,644,618,436,34,81,446,-907,231,430,-511,-657,-800,-695,602,-539,-373,-990,-917,898,456,-681,394,-173,418,-412,-165,144,555,-630,-493,251,5,379,300,-15,-948,277,985,-274,-235,-343,-302,-829,166,-211,822,666,-748,-24,-827,185,464,605,-952,-725,-691,-574,911,-686,141,-858,569,281,-421,235,-36,309,-220,-796,302,-789,-73,-484,-628,391,-687,899,-118,-776,-262,-393,-132,847,498,-367,-921,-98,160,-246,675,-836,-838,611,-830,-664,-892,-463,816,725,315,-332,869,670,-21,130,-303,-309,797,793,-183,-236,828,-572,-543,-503,701,326,487,-561,18,842,-9,171,-813,-394,346,-400,-588,916,934,-982,-42,226,-243,319,768,-120,-656,-371,-440,883,-479,188,-755,-51,-229,621,-787,-736,-730,-369,808,835,331,-761,694,563,-171,907,-870,-38,-78,-875,181,318,190,-396,-324,-963,359,795,-163,945,662,524,-230,637,-839,-925,-56,182,122,-841,972,413,-330,471,-82,-60,-882,974,-958,352,922,-278,108,624,-938,-517,-884,-30,232,-943,830,971,642,577,95,123,-653,437,-571,-983,162,-770,-961,247,871,-226,-486,-26,965,508,549,-644,-863,677,179,-521,553,-640,461,684,825,539,-693,-625,395,-499,-668,-488,613,744,37,13,-886,-509,275,-271,-200,494,-599,-195,601,750,938,-237,-253,-889,967,115,-970,-879,955,-58,-579,-465,66,929,-506,191,40,345,522,584,-94,-290,354,-828,-109,820,325,-801,710,604,41,-727,-757,649,378,969,889,-661,-652,-569,760,-912,159,-854,-496,-128,-998,897,868,628,-416,765,38,488,-708,427,177,304,-775,398,-916,-350,-655,882,317,-45,-754,210,4,119,534,64,-282,-903,671,-454,-753,-646,-65,-460,250,-233,357,-620,-1,-418,-699,832,62,114,-968,747,575,-771,-270,84,-949,996,-766,-467,502,-939,598,-476,742,-642,630,366,208,-607,873,-232,-110,616,800,733,656,-117,741,-161,202,785,-184,544,273,-918,936,-104,543,995,451,-769,490,-299,925,997,857,748,963,-552,910,-49,337,-877,-957,-391,103,603,653,-408,204,-429,526,879,467,-27,-537,-485,-941,960,-279,657,428,689,745,-649,217,824,855,968,-228,439,723,-585,-225,-586,-102,966,-594,-816,696,221,-328,864,-621,-287,-216,-679,-505,442,-107,243,597,180,-149,-5,-724,-425,100,423,749,139,29,-665,944,-478,-763,-651,36,705,740,-583,786,-404,-168,-66,-234,548,545,-928,-805,-871,-860,-296,-609,-481,299,-295,-122,-742,474,-638,481,-348,486,759,-843,-849,-702,-475,-504,-142,50,205,432,990,328,-210,-631,-366,625,-215,582,-919,193,455,-808,-913,112,-696,-39,-347,999,-971,-731,-401,706,68,-861,-937,-359,477,-241,308,329,-382,-95,382,-414,-798,-413,953,32,722,-741,-554,261,-340,-360,-707,-822,111,-472,669,-372,-964,887,67,-823,-336,805,-490,22,771,116,-767,885,527,295,-700,237,-285,-79,-675,-759,946,531,-127,365,-59,937,978,-11,939,823,186,-125,-636,-362,321,-191,278,650,220,622,-435,729,-44,377,680,433,783,215,-84,-556,547,-911,75,-325,-314,-894,818,-293,-867,-437,848,921,245,-547,-722,894,663,248,407,271,265,17,-826,-217,-112,388,422,375,638,715,109,981,-365,-269,826,393,-64,-610,796,-319,152,401,33,45,-612,307,-197,-859,151,-817,-617,161,380,504,240,574,802,757,510,425,-576,-19,521,-442,714,255,-333,572,-772},1260);
        System.out.println("final=" + result);
    }

    public static int threeSumClosest(int[] nums, int target) {
        System.out.println(nums.length);
        int result = Integer.MAX_VALUE;
        for (int a = 0; a < nums.length; a++) {
            for (int b = a + 1; b < nums.length; b++) {
                for (int c = b + 1; c < nums.length; c++) {
                    int summary = nums[a] + nums[b] + nums[c];
                    System.out.println("result=" + summary);
                    if (Math.abs(summary - target) < Math.abs(result - target)) {
                        result = summary;
                        if (result == target) {
                            break;
                        }
                    }

                }
            }
        }
        return result;
    }


}
